components:
  $ref: "./components.yaml"

# Paths section
paths:
  # Auth endpoints
  /api/auth/sign-up:
    post:
      tags:
        - Auth
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: apikeyper
                email:
                  type: string
                  example: apikeyper@example.com
                password:
                  type: string
                  example: password123
      responses:
        "201":
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: User created successfully
        "400":
          description: Bad request
  /api/auth/sign-up/validation/email:
    post:
      tags:
        - Auth
      summary: Validate email for user registration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: apikeyper@example.com
      responses:
        "200":
          description: Email is valid and available
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Email is valid and available
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Bad request
        "409":
          description: Email already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Email already exists
  /api/auth/sign-up/verification/email/{token}:
    get:
      tags:
        - Auth
      summary: Validate email for user registration
      parameters:
        - name: token
          in: path
          description: email verification token
          required: true
          schema:
            type: string
            example: 123456
      response:
        "302":
          description: signed up successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: signed up successfully
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Bad request
        "409":
          description: Email already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Email already exists
  /api/auth/log-in:
    post:
      tags:
        - Auth
      summary: Authenticate a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        "200":
          headers:
            Set-Cookie:
              schema:
                type: string
                example: refreshToken=abcde; Path=/; HttpOnly; Secure; SameSite=None
            Authorization:
              schema:
                type: string
                example: Bearer abcde
          description: User authenticated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: User authenticated successfully
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Bad request
        "401":
          description: Unauthorized
  /api/auth/log-out:
    delete:
      tags:
        - Auth
      summary: Log out a user
      responses:
        "200":
          description: User logged out successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: User logged out successfully
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Bad request
        "401":
          description: Unauthorized
  /api/auth/refresh:
    post:
      tags:
        - Auth
      summary: Refresh access token
      responses:
        "200":
          headers:
            Set-Cookie:
              schema:
                type: string
                example: refreshToken=abcde; Path=/; HttpOnly; Secure; SameSite=None
            Authorization:
              schema:
                type: string
                example: Bearer abcde
          description: Access token refreshed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Access token refreshed successfully
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Bad request
        "401":
          description: Unauthorized
  /api/account:
    delete:
      tags:
        - Account
      summary: Delete a user account
      responses:
        "200":
          description: User account deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: User account deleted successfully
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Bad request
        "401":
          description: Unauthorized
  /api/token:
    post:
      tags:
        - Token
      summary: Create a new token data
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ".#/components/schemas/Request-Token"
      responses:
        "201":
          description: Token data created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Token data created successfully
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Bad request
        "401":
          description: Unauthorized
    get:
      tags:
        - Token
      summary: Get all token data
      responses:
        "200":
          description: get all token data
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: ".#/components/schemas/Response-Token"
  /api/token/{id}:
    get:
      tags:
        - Token
      summary: Get token data by id
      parameters:
        - name: id
          in: path
          description: token data id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: get token data by id
          content:
            application/json:
              schema:
                $ref: ".#/components/schemas/Response-Token"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Bad request
        "401":
          description: Unauthorized
    put:
      tags:
        - Token
      summary: Update token data by id
      parameters:
        - name: id
          in: path
          description: token data id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: ".#/components/schemas/Request-Token"
      responses:
        "200":
          description: Token data updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Token data updated successfully
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Bad request
        "401":
          description: Unauthorized
    delete:
      tags:
        - Token
      summary: Delete token data by id
      parameters:
        - name: id
          in: path
          description: token data id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Token data deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Token data deleted successfully
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Bad request
        "401":
          description: Unauthorized
